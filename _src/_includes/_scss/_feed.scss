.feed {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(18em, 1fr));
  grid-auto-rows: 20em;
  padding: $flow2 0;

  &__item {
    // badge offset amount
    $o: $borderWidth * 2;
    margin: 0;
    padding: $flow2;
    background-color: var(--g7);
    text-decoration: none;
    display: flex;
    align-items: center;
    text-align: center;

    &:hover,
    &:focus {
      &::before {
        opacity: 0.94;
      }

      .feed__item--text {
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }

      .feed__item--badges .badge {
        animation: wave 0.6s ease both;
        padding-top: 0;
        padding-bottom: 0;
        color: transparent;
        transition-delay: calc(var(--index) * 0.1s);
      }
    }

    &--text {
      z-index: 2;
      width: 100%;
      opacity: 0;
      transform: translate3d(0, 1em, 0);
      transition: opacity $colorTransition, transform $smoothTransition;
    }

    &--image,
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    &--image {
      background-color: none !important;
      object-position: center;
      object-fit: cover;
    }

    &::before {
      content: "";
      z-index: 1;
      background: var(--g8);
      opacity: 0;
      pointer-events: none;
      transition: opacity $smoothTransition;
    }

    &--badges {
      position: absolute;
      display: flex;
      z-index: 5;
      top: -$o;
      left: 0;
      right: 0;
      width: 100%;
      padding: 0 $flow1;

      .badge {
        text-transform: uppercase;
        color: $g8;
        margin-right: $flow1 / 2;
        max-width: 30%;
        line-height: 1;
        padding: calc(#{$flow1} - #{$borderWidth}) $flow1;
        background: var(--color);
        border-radius: 0 $o 0 0;
        transform-origin: top;
        transition: $colorTransition;

        &::before,
        &::after {
          content: "";
          position: absolute;
          transition: $colorTransition;
        }

        &::before {
          top: 0;
          border-radius: $o 0 0 0;
          left: -$o;
          width: $o;
          height: $o;
          background: var(--color);
          filter: brightness(0.63);
        }

        &::after {
          $toothSize: $borderWidth * 2;
          left: 0;
          top: 100%;
          width: 100%;
          height: $toothSize;
          background: linear-gradient(
              45deg,
              var(--color) 33.333%,
              transparent 33.333%,
              transparent 66.667%,
              var(--color) 66.667%
            ),
            linear-gradient(
              -45deg,
              var(--color) 33.333%,
              transparent 33.333%,
              transparent 66.667%,
              var(--color) 66.667%
            );
          background-repeat: repeat-x;
          background-size: $toothSize * 2 $toothSize * 4;
          background-position: 0 (-$toothSize);
        }
      }
    }
  }
}

@media screen and (max-width: $mobile) {
  .feed {
    gap: 1em;

    &__item {
      align-items: flex-end;

      &--text {
        padding: 1em;
        background: var(--g8);
        transform: none;
        opacity: 1;
      }

      &::before {
        opacity: 0;
      }
    }
  }
}
