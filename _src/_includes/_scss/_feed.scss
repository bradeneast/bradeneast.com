.feed {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(18em, 1fr));
  grid-auto-rows: 20em;
  padding: $flow2 0;
  gap: $borderWidth;

  &__item {
    --backdrop-blur: 8px;
    --start-start: 0;
    --start-end: 0;
    --end-start: 0;
    --end-end: 0;
    // badge offset amount
    $o: $borderWidth * 2;
    margin: 0;
    text-decoration: none;
    display: flex;
    align-items: center;
    text-align: center;

    &:hover,
    &:focus {
      &::before {
        opacity: 1;
      }

      .feed__item--text,
      .subtext {
        opacity: 1;
        transform: translate3d(0, 0, 0);
      }

      .subtext {
        transition-delay: 0.2s;
      }

      .feed__item--badges .badge {
        animation: wave 0.6s ease both;
        padding-top: 0;
        padding-bottom: 0;
        color: transparent;
        transition-delay: calc(var(--index) * 0.1s);
      }
    }

    .subtext {
      position: absolute;
      bottom: 0;
      left: 0;
    }

    &--text,
    .subtext {
      margin: 0;
      padding: $flow2;
      z-index: 2;
      width: 100%;
      opacity: 0;
      transform: translate3d(0, 1em, 0);
      transition: opacity $colorTransition, transform $smoothTransition;
    }

    &--text {
      margin-bottom: $flow1;
    }

    &::before {
      --start-start: calc(var(--start-start) - 1px);
      --start-end: calc(var(--start-end) - 1px);
      --end-start: calc(var(--end-start) - 1px);
      --end-end: calc(var(--end-end) - 1px);
      content: "";
      z-index: 1;
      background: var(--translucent);
      opacity: 0;
      pointer-events: none;
      transition: opacity $smoothTransition;
      backdrop-filter: blur(var(--backdrop-blur));
    }

    &--image,
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      border-radius: var(--start-start) var(--start-end) var(--end-start) var(--end-end);
    }

    &--image img {
      transition: $smoothTransition;
    }

    &--badges {
      position: absolute;
      display: flex;
      z-index: 5;
      top: -$o;
      left: 0;
      right: 0;
      width: 100%;
      padding: 0 $flow1;

      .badge {
        font-size: $fontSizeSmall;
        text-transform: uppercase;
        color: $g8;
        margin-right: math.div($flow1, 2);
        line-height: 1;
        padding: calc(1em - #{$borderWidth}) 1em;
        background: var(--color);
        border-radius: 0 $o 0 0;
        transform-origin: top;
        transition: $colorTransition;

        &::before,
        &::after {
          content: "";
          position: absolute;
          transition: $colorTransition;
        }

        &::before {
          top: 0;
          border-radius: $o 0 0 0;
          left: -$o;
          width: $o;
          height: $o;
          background: var(--color);
          filter: brightness(0.63);
        }

        &::after {
          $toothSize: $borderWidth * 2;
          left: 0;
          top: 100%;
          width: 100%;
          height: $toothSize;
          background: linear-gradient(45deg,
              var(--color) 33.333%,
              transparent 33.333%,
              transparent 66.667%,
              var(--color) 66.667%),
            linear-gradient(-45deg,
              var(--color) 33.333%,
              transparent 33.333%,
              transparent 66.667%,
              var(--color) 66.667%);
          background-repeat: repeat-x;
          background-size: $toothSize * 2 $toothSize * 4;
          background-position: 0 (-$toothSize);
        }
      }
    }
  }
}

@media screen and (min-width: $mobile) {
  .feed__item {
    &:first-child {
      --start-start: #{$borderRadius};
    }

    &:nth-child(2) {
      --start-end: #{$borderRadius};
    }

    &:nth-child(2n) {
      &.next-to-last {
        --end-start: #{$borderRadius};
      }

      &:last-child {
        --end-start: #{$borderRadius};
      }
    }

    &:nth-child(2n + 1) {
      &.next-to-last {
        --end-end: #{$borderRadius};
      }

      &:last-child {
        --end-end: #{$borderRadius};
        --end-start: #{$borderRadius};
      }
    }
  }
}

@media screen and (max-width: $mobile) {
  .feed {
    gap: $flow1;

    &__item {
      align-items: flex-end;
      flex-flow: row wrap;
      align-content: flex-end;
      justify-content: center;
      filter: drop-shadow(var(--shadowLarge));
      --start-start: #{$borderRadius};
      --start-end: #{$borderRadius};
      --end-start: #{$borderRadius};
      --end-end: #{$borderRadius};

      &:hover,
      &:focus {

        .feed__item--text,
        .subtext {
          opacity: 0;
          transform: none;
          transition: $smoothTransition;
        }

        &::before {
          opacity: 0;
        }
      }

      &--image {
        border-radius: calc(var(--end-end) + 1px);
      }

      &--text,
      .subtext {
        position: relative;
        padding: $flow1;
        background: var(--translucent);
        transform: none;
        opacity: 1;
        margin: 0;
      }

      &--text {
        color: var(--g0);
        padding-bottom: math.div($flow1, 2);
      }

      .subtext {
        color: var(--g3);
        padding-top: 0;
        border-radius: 0 0 var(--end-start) var(--end-end);
      }

      &::before {
        opacity: 0;
      }
    }
  }
}