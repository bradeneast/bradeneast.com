.flex {
	display: flex;
}

.grid {
	display: grid;
	gap: $flow4;
	grid-template-columns: repeat(auto-fill, minmax(var(--columns), 1fr));
}

@media screen and (min-width: $mobile) {
	.alternate-sides > :nth-child(2n) > :last-child {
		order: -1;
	}
}

.limited-width {
	max-width: 48rem;
}

.hidden {
	opacity: 0;
	pointer-events: none;
}

[class*="border-"] {
	&::before {
		content: "";
		position: absolute;
		pointer-events: none;
		top: 0;
		left: 0;
		color: var(--g7);
		background: currentColor;
		--scaleX: 1;
		--scaleY: 1;
		transform: translate3d(0, 0, 0) scale(var(--scaleX), var(--scaleY));
		transition: $smoothTransition;
	}
}

.border-left::before,
.border-right::before {
	height: 100%;
	width: $borderWidth;
}

.border-top::before,
.border-bottom::before {
	width: 100%;
	height: $borderWidth;
}

.border-bottom::before,
.border-right::before {
	bottom: 0;
	right: 0;
	top: auto;
	left: auto;
}
