((g,h)=>{let i=function(){return this}(),e={},f=(c,d)=>{if(typeof c==="number"){let a=e[c],b;return a||(a=e[c]={exports:{}},g[c].call(i,f,a.exports,a)),b=a.exports,d&&(!b||!b.__esModule)&&((!b||typeof b!=="object")&&(b={}),"default"in b||Object.defineProperty(b,"default",{get:()=>a.exports,enumerable:!0})),b}d.__esModule=()=>!0;for(let a in d)Object.defineProperty(c,a,{get:d[a],enumerable:!0})};return f(h)})({3(f,j){const i=a=>{console.log("WORKER: install event in progress."),a.waitUntil(caches.open(version+"fundamentals").then(function(b){return b.addAll(["/","/_assets/css/main.min.css","/_assets/css/non_critical.min.css","/_assets/css/prism.min.css","/_assets/js/main.min.js","/_assets/js/prism.min.js","/_assets/js/search.min.js"])}).then(function(){console.log("WORKER: install completed")}))};
const h=a=>{console.log("WORKER: fetch event in progress.");if(a.request.method!=="GET"){console.log("WORKER: fetch event ignored.",a.request.method,a.request.url);return}a.respondWith(caches.match(a.request).then(function(b){var c=fetch(a.request).then(l,d).catch(d);return console.log("WORKER: fetch event",b?"(cached)":"(network)",a.request.url),b||c;function l(e){var m=e.clone();return console.log("WORKER: fetch response from network.",a.request.url),caches.open(version+"pages").then(function C(n){n.put(a.request,m)}).then(function(){console.log("WORKER: fetch response stored in cache.",a.request.url)}),e}function d(){return console.log("WORKER: fetch request failed in both cache and network."),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})}}))};
const g=a=>{console.log("WORKER: activate event in progress."),a.waitUntil(caches.keys().then(function(b){return Promise.all(b.filter(function(c){return!c.startsWith(version)}).map(function(c){return caches.delete(c)}))}).then(function(){console.log("WORKER: activate completed.")}))};
f(j,{version:()=>k});const k="1::";"serviceWorker"in navigator?(console.log("CLIENT: service worker registration in progress."),navigator.serviceWorker.register("/service-worker.min.js").then(function(){console.log("CLIENT: service worker registration complete.")},function(){console.log("CLIENT: service worker registration failure.")})):console.log("CLIENT: service worker is not supported."),self.addEventListener("install",i),self.addEventListener("fetch",h),self.addEventListener("activate",g);
}},3);
