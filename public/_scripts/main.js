function toggleDarkMode() { document.documentElement.classList.toggle('dm'); var e = localStorage.getItem('darkModeOn'), t = document.getElementById('favicon'), o = !!e && JSON.parse(e); if (o)
    return t.setAttribute('href', t.href.replace('dark', 'light')), void localStorage.setItem('darkModeOn', !1); o || (t.setAttribute('href', t.href.replace('light', 'dark')), localStorage.setItem('darkModeOn', !0)); }
function dynamicSort(e) { var t = 1; return '-' === e[0] && (t = -1, e = e.substr(1)), function (o, n) { return (o[e] < n[e] ? -1 : o[e] > n[e] ? 1 : 0) * t; }; }
function formatMedia() { document.querySelectorAll('img').forEach(function (e) { (function (e) { 'style, width, height, max-width, max-height'.split(', ').map(function (t) { return e.removeAttribute(t); }), e.setAttribute('loading', 'lazy'); })(e), e.getAttribute('alt') || e.setAttribute('alt', function (e) { var t = e.getAttribute('src'); if (t)
    return (decodeURIComponent(t) || '').split('/').pop().split('.').shift().replace(/-|\+/g, ' ') || ''; }(e)); }), document.querySelectorAll('video').forEach(function (e) { e.setAttribute('loop', !0), e.setAttribute('muted', !0), e.setAttribute('playsinline', !0); }), document.querySelectorAll('.codepen').forEach(function (e) { return populateCodepen(e); }), document.querySelectorAll('a').forEach(function (e) { e.getAttribute('href').includes('://') && e.setAttribute('target', '_blank'); }); }
function playChildMedia(e) { e.querySelectorAll('video').forEach(function (e) { return e.play(); }); }
function pauseChildMedia(e) { e.querySelectorAll('video').forEach(function (e) { return e.pause(); }); }
function populateCodepen(e) { var t = e.getAttribute('data-slug-hash'), o = e.getAttribute('data-user'), n = document.createElement('p'); t && (n.innerHTML += "View <a href=\"https://codepen.io/pen/" + t + "\">this pen</a>"), t && o && (n.innerHTML += " by <a href=\"" + ('https://codepen.io/' + o) + "\">@" + o + "</a>"), n.classList.add('codepen-fallback'), n.innerHTML = t || o ? n.innerHTML + ' on CodePen.' : 'This pen is unavailable.', e.insertAdjacentElement('afterend', n); }
function staggerAnimations(e) { var t, o, n = e.parent, i = n.getBoundingClientRect(), r = { x: i.right - i.width / 2, y: i.bottom - i.height / 2 }, a = Array.from(n.children), l = [], c = .5 * e.intensity, d = e.origin.split(' ') || ['top', 'left']; d[1] || d.push('center'), 'left' != d[0] && 'right' != d[0] || d.reverse(), d.map(function (e, n) { 'center' != e ? 0 == n ? o = i[e] : t = i[e] : 0 == n ? o = r.y : t = r.x; }), a.map(function (e) { var n = e.getBoundingClientRect(), i = n.right - n.width / 2, r = n.bottom - n.height / 2, a = Math.max(t, i) - Math.min(t, i), c = Math.max(o, r) - Math.min(o, r), d = Math.hypot(a, c); e.distance = Math.round(d), l.push(e); }), l.sort(dynamicSort('distance')), 'to' == e.direction && l.reverse(), l.map(function (e, t) { return e.style.animationDelay = t * c + 's'; }); }
document.querySelectorAll('.nav-item').forEach(function (e) { var t = e.textContent, o = window.location.href.toLowerCase(); t && e.classList.toggle('active', o.includes(t.toLowerCase())); });
var main = document.getElementById('main'), boilerPlateDesktop = document.querySelector('.nav-end'), boilerPlateMobile = boilerPlateDesktop.cloneNode(!0), boilerPlateCopy = document.createElement('section');
boilerPlateCopy.appendChild(boilerPlateMobile), main.insertAdjacentElement('afterend', boilerPlateCopy), document.querySelectorAll('[data-stagger]').forEach(function (e) { staggerAnimations({ parent: e, intensity: .2, direction: 'from', origin: 'top' }); }), formatMedia();
