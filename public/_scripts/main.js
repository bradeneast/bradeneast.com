function checkActiveLinks() { document.querySelectorAll('.nav-item').forEach(function (t) { var e = t.textContent, o = window.location.href.toLowerCase(); e && (o.includes(e.toLowerCase()) ? t.classList.add('active') : t.classList.remove('active')); }); }
function toggleDarkMode() { var t = localStorage.getItem('darkModeOn'); var e; t && (e = JSON.parse(t)), e ? localStorage.setItem('darkModeOn', 'false') : localStorage.setItem('darkModeOn', 'true'), document.documentElement.classList.toggle('dm'); }
function altFromSource(t) { var e, o = t.getAttribute('src'); if ('string' == typeof o) {
    var t_1 = decodeURIComponent(o).split('/').pop();
    t_1 && (e = t_1.split('.').shift().replace(/-|\+/g, ' '));
} return e; }
function clearImageFormatting() { var t = 'style, width, height, max-width, max-height'.split(', '); document.querySelectorAll('img').forEach(function (e) { t.map(function (t) { return e.removeAttribute(t); }), !e.getAttribute('alt') && e.setAttribute('alt', altFromSource(e)), e.setAttribute('loading', 'lazy'); }); }
function dynamicSort(t) { var e = 1; return '-' === t[0] && (e = -1, t = t.substr(1)), function (o, n) { return (o[t] < n[t] ? -1 : o[t] > n[t] ? 1 : 0) * e; }; }
function animateOnScroll(t, _a) {
    var e = _a.threshold, o = _a.rootMargin, n = _a.root;
    new IntersectionObserver(function (t) { t.map(function (t) { return t.target.setAttribute('data-scroll', t.isIntersecting); }); }, { threshold: e, rootMargin: o, root: n }).observe(t);
}
function staggerAnimations(t) { var e, o, n = t.parent, r = n.getBoundingClientRect(), a = { x: r.right - r.width / 2, y: r.bottom - r.height / 2 }, i = Array.from(n.children), l = [], s = .5 * t.intensity, c = t.origin.split(' ') || ['top', 'left']; c[1] || c.push('center'), 'left' != c[0] && 'right' != c[0] || c.reverse(), c.map(function (t, n) { 'center' != t ? 0 == n ? o = r[t] : e = r[t] : 0 == n ? o = a.y : e = a.x; }), i.map(function (t) { var n = t.getBoundingClientRect(), r = n.right - n.width / 2, a = n.bottom - n.height / 2, i = Math.max(e, r) - Math.min(e, r), s = Math.max(o, a) - Math.min(o, a), c = Math.hypot(i, s); t.distance = Math.round(c), l.push(t); }), l.sort(dynamicSort('distance')), 'to' == t.direction && l.reverse(), l.map(function (t, e) { return t.style.animationDelay = e * s + 's'; }); }
function startTouchListeners() { var t, e; window.addEventListener('touchstart', function (e) { t = parseInt(e.changedTouches[0].clientX); }), window.addEventListener('touchend', function (o) { e = t - o.changedTouches[0].clientX, 'darkModeToggle' == o.target.id && (JSON.parse(localStorage.getItem('darkModeOn')) ? e > toggleThreshold && toggleDarkMode() : e < -1 * toggleThreshold && toggleDarkMode()); }); }
function copyBoilerPlateForMobile() { var t = document.querySelector('.nav-end').cloneNode(!0), e = document.createElement('section'); e.appendChild(t), main.insertAdjacentElement('afterend', e); }
var toggles = Array.from(document.getElementsByClassName('toggle')), toggleThreshold = 20, main = document.getElementById('main'), allImages = Array.from(document.getElementsByTagName('img')), consoleInfoStyles = '\n    font-family: sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n';
checkActiveLinks(), copyBoilerPlateForMobile(), startTouchListeners(), document.querySelectorAll('[data-stagger]').forEach(function (t) { staggerAnimations({ parent: t, intensity: .3, direction: 'from', origin: 'top left' }); }), allImages.map(function (t) { clearImageFormatting(t), altFromSource(t), animateOnScroll(t, { threshold: .2 }); }), console.info('%c â“˜ Here to hack? My website is hosted with Netlify, deployed with GitHub, and compiled with NodeJS. Have fun! \n - Braden ', consoleInfoStyles);
