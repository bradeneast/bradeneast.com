<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>Blog of Braden East</title>
<link>https://www.bradeneast.com/blog/./public/blog/feed.xml</link>
<description>The blog for dev-signers. Gain confidence designing and coding stellar interfaces.</description>
<lastBuildDate>Sat, 19 Oct 2019 01:16:54 GMT</lastBuildDate>
<atom:link href="https://www.bradeneast.com/blog/./public/blog/feed.xml" rel="self" type="application/rss+xml" />
    <item>
    <title>Make knobs and dials with HTML and CSS</title>
    <link>https://www.bradeneast.com/make-knobs-and-dials-with-html-and-css</link>
    <guid>https://www.bradeneast.com/make-knobs-and-dials-with-html-and-css</guid>
    <pubDate>Mon, 09 Sep 2019 05:00:00 GMT</pubDate>
    <category>html</category><category>css</category><category>ui</category>
    <description>
In this article, we&#x2019;ll look at how to make a rotating knob input with HTML, CSS, and just a smidge of Javascript.</description>
    </item>
    <item>
    <title>Staggered animations: css vs scss vs javascript</title>
    <link>https://www.bradeneast.com/staggered-animations-css-vs-scss-vs-javascript</link>
    <guid>https://www.bradeneast.com/staggered-animations-css-vs-scss-vs-javascript</guid>
    <pubDate>Tue, 03 Sep 2019 05:00:00 GMT</pubDate>
    <category>ui</category><category>design</category><category>css</category><category>javascript</category>
    <description>
Today, let&#x2019;s talk about integrating motion into our websites and user interfaces.</description>
    </item>
    <item>
    <title>Style pseudo elements with javascript</title>
    <link>https://www.bradeneast.com/style-pseudo-elements-with-javascript</link>
    <guid>https://www.bradeneast.com/style-pseudo-elements-with-javascript</guid>
    <pubDate>Tue, 20 Aug 2019 05:00:00 GMT</pubDate>
    <category>html</category><category>css</category><category>javascript</category>
    <description>
I&#x2019;m a proponent of styles in CSS over styles in Javascript where at all possible. That said, sometimes we want to add a little bit of extra zest that requires JS. Today, we&#x2019;re taking a look at styling pseudo elements with Javascript for that little extra sparkle.</description>
    </item>
    <item>
    <title>Get img alt attribute automatically from src</title>
    <link>https://www.bradeneast.com/get-img-alt-attribute-automatically-from-src</link>
    <guid>https://www.bradeneast.com/get-img-alt-attribute-automatically-from-src</guid>
    <pubDate>Mon, 19 Aug 2019 05:00:00 GMT</pubDate>
    <category>javascript</category><category>html</category><category>accessibility</category>
    <description>
I&#x2019;m sometimes lazy when it comes to accessibility on web projects. No matter how hard I try, I&#x2019;m usually adding aria-label and tabindex and role attributes later than I&#x2019;d like.</description>
    </item>
    <item>
    <title>Convert JSON to HTML - Nested objects and URLs</title>
    <link>https://www.bradeneast.com/convert-json-to-html--nested-objects-and-urls</link>
    <guid>https://www.bradeneast.com/convert-json-to-html--nested-objects-and-urls</guid>
    <pubDate>Wed, 07 Aug 2019 05:00:00 GMT</pubDate>
    <category>javascript</category><category>html</category>
    <description>
No developer wants to debug code written for a single use case. Sometimes you have to bite the bullet and write an ultra-specific function, but the goal is to be kind to your future developer self.  Code you can reuse is code you don&#x2019;t have to write (or rewrite).</description>
    </item>
    <item>
    <title>Append JSON values to matching HTML elements with Object.keys()</title>
    <link>https://www.bradeneast.com/append-json-values-to-matching-html-elements-with-objectkeys</link>
    <guid>https://www.bradeneast.com/append-json-values-to-matching-html-elements-with-objectkeys</guid>
    <pubDate>Sun, 04 Aug 2019 05:00:00 GMT</pubDate>
    <category>javascript</category><category>html</category>
    <description>
Ever needed a quick way to convert data from JSON to HTML, with as few lines of code as possible? I find myself need a way to do this all the time, whether I&#x2019;m wanting to display fetched API data, a list of posts, or something else.  Since the most common API response format is JSON data, I often unpack them using the javascript Object.keys() method.</description>
    </item></channel></rss>