<?xml version="1.0" encoding="utf-8"?>
        <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
        <channel>
        <title>Blog of Braden East</title>
        <link>https://bradeneast.com/blog/feed.xml</link>
        <description>The blog for dev-signers.</description>
        <lastBuildDate>Fri, 06 Mar 2020 16:38:43 GMT</lastBuildDate>
        <atom:link href="https://bradeneast.com/blog/feed.xml" rel="self" type="application/rss+xml" />
        <item>
            <title>Embed codepens with one line of HTML - faster and more accessibly</title>
            <link>https://bradeneast.com/blog/embed-codepens-with-one-line-of-html-faster-and-more-accessibly</link>
            <guid>https://bradeneast.com/blog/embed-codepens-with-one-line-of-html-faster-and-more-accessibly</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>html</category>
<category>performance</category>
<category>accessibility</category>
            <description>When I write for this blog, I usually embed a CodePen at the end of the post, as a proof-of-concept of sorts. The problem is, embedded pens are not as friendly and easy to use as most other CodePen features.</description>
        </item>
        <item>
            <title>get img alt attribute automatically from src</title>
            <link>https://bradeneast.com/blog/get-img-alt-attribute-automatically-from-src</link>
            <guid>https://bradeneast.com/blog/get-img-alt-attribute-automatically-from-src</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>javascript</category>
<category>html</category>
<category>accessibility</category>
            <description>Im sometimes lazy when it comes to accessibility on web projects. No matter how hard I try, Im usually adding aria-label and tabindex and role attributes later than Id like.</description>
        </item>
        <item>
            <title>Knobs and dials on the web</title>
            <link>https://bradeneast.com/blog/knobs-and-dials-on-the-web</link>
            <guid>https://bradeneast.com/blog/knobs-and-dials-on-the-web</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>html</category>
<category>css</category>
<category>ui</category>
            <description>In this article, weâ€™ll look at how to make a rotating knob input with HTML, CSS, and just a smidge of Javascript.</description>
        </item>
        <item>
            <title>staggered animations</title>
            <link>https://bradeneast.com/blog/staggered-animations</link>
            <guid>https://bradeneast.com/blog/staggered-animations</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>ui</category>
<category>design</category>
<category>css</category>
<category>javascript</category>
            <description>Today, lets talk about integrating motion into our websites and user interfaces.</description>
        </item>
        <item>
            <title>Style pseudo elements with Javascript</title>
            <link>https://bradeneast.com/blog/style-pseudo-elements-with-javascript</link>
            <guid>https://bradeneast.com/blog/style-pseudo-elements-with-javascript</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>html</category>
<category>css</category>
<category>javascript</category>
            <description>Im a proponent of styles in CSS over styles in Javascript where at all possible. That said, sometimes we want to add a little bit of extra zest that requires JS. Today, were taking a look at styling pseudo elements with Javascript for that little extra sparkle.</description>
        </item>
        <item>
            <title>The simplest pull-to-refresh</title>
            <link>https://bradeneast.com/blog/the-simplest-pull-to-refresh</link>
            <guid>https://bradeneast.com/blog/the-simplest-pull-to-refresh</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>design</category>
<category>ui</category>
<category>css</category>
            <description>Whether you like it or not, pull-to-refresh is here to stay, and its something that designers and developers need to have in their reportoire.  While Swift has a native API for pull-to-refresh, web developers have to figure out their own Javascript implementation of the concept, which is unpleasantly buggy at worst and time-consuming at best.</description>
        </item>
        <item>
            <title>Using noscript</title>
            <link>https://bradeneast.com/blog/using-noscript</link>
            <guid>https://bradeneast.com/blog/using-noscript</guid>
            <pubDate>Sat, 15 Feb 2020 18:35:00 GMT</pubDate>
            <category>javascript</category>
<category>html</category>
<category>accessibility</category>
            <description>noscript is really useful when we need to provide alternate/additional styles and content under circumstances where Javascript isnt available.</description>
        </item></channel></rss>