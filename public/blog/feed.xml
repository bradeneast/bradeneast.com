<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>Blog of Braden East</title>
<link>https://www.bradeneast.com/blog/./public/blog/feed.xml</link>
<description>The blog for dev-signers. Gain confidence designing and coding stellar interfaces.</description>
<lastBuildDate>Tue, 14 Jan 2020 15:54:14 GMT</lastBuildDate>
<atom:link href="https://www.bradeneast.com/blog/./public/blog/feed.xml" rel="self" type="application/rss+xml" /><item>
        <title>Embed CodePens faster and more accessibly</title>
        <link>https://www.bradeneast.com/embed-codepens-faster-and-more-accessibly</link>
        <guid>https://www.bradeneast.com/embed-codepens-faster-and-more-accessibly</guid>
        <pubDate>Mon, 13 Jan 2020 06:00:00 GMT</pubDate>
        <category>blog</category><category>html</category><category>codepen</category><category>performance</category><category>accessibility</category>
        <description>

Since starting to write for my blog, I embed a CodePen at the end of most of my posts, as a sort of &#x201C;proof-of-concept&#x201D;. The problem is, CodePen embeds are not as friendly and easy to use as most other CodePen features.</description>
        </item><item>
        <title>The simplest pull-to-refresh</title>
        <link>https://www.bradeneast.com/the-simplest-pulltorefresh</link>
        <guid>https://www.bradeneast.com/the-simplest-pulltorefresh</guid>
        <pubDate>Sat, 11 Jan 2020 06:00:00 GMT</pubDate>
        <category>blog</category><category>design</category><category>ui</category><category>css</category>
        <description>

Whether you like it or not, pull-to-refresh is here to stay, and it&#x2019;s something that designers and developers need to have in their reportoire.  While Swift has a native API for pull-to-refresh, web developers have to figure out their own Javascript implementation of the concept, which is unpleasantly buggy at worst and time-consuming at best.</description>
        </item><item>
        <title>Using ⟨noscript⟩</title>
        <link>https://www.bradeneast.com/using-noscript</link>
        <guid>https://www.bradeneast.com/using-noscript</guid>
        <pubDate>Fri, 18 Oct 2019 05:00:00 GMT</pubDate>
        <category>javascript</category><category>html</category><category>accessibility</category><category>blog</category>
        <description>
&lt;noscript&gt; is really useful when we need to provide alternate/additional styles and content under circumstances where Javascript isn&#x2019;t available.</description>
        </item><item>
        <title>Knobs and dials on the web</title>
        <link>https://www.bradeneast.com/knobs-and-dials-on-the-web</link>
        <guid>https://www.bradeneast.com/knobs-and-dials-on-the-web</guid>
        <pubDate>Mon, 09 Sep 2019 05:00:00 GMT</pubDate>
        <category>html</category><category>css</category><category>ui</category><category>blog</category>
        <description>

In this article, we&#x2019;ll look at how to make a rotating knob input with HTML, CSS, and just a smidge of Javascript.</description>
        </item><item>
        <title>Staggered animations</title>
        <link>https://www.bradeneast.com/staggered-animations</link>
        <guid>https://www.bradeneast.com/staggered-animations</guid>
        <pubDate>Tue, 03 Sep 2019 05:00:00 GMT</pubDate>
        <category>ui</category><category>design</category><category>css</category><category>javascript</category><category>blog</category>
        <description>

Today, let&#x2019;s talk about integrating motion into our websites and user interfaces.</description>
        </item><item>
        <title>Style pseudo elements with javascript</title>
        <link>https://www.bradeneast.com/style-pseudo-elements-with-javascript</link>
        <guid>https://www.bradeneast.com/style-pseudo-elements-with-javascript</guid>
        <pubDate>Tue, 20 Aug 2019 05:00:00 GMT</pubDate>
        <category>html</category><category>css</category><category>javascript</category><category>blog</category>
        <description>
I&#x2019;m a proponent of styles in CSS over styles in Javascript where at all possible. That said, sometimes we want to add a little bit of extra zest that requires JS. Today, we&#x2019;re taking a look at styling pseudo elements with Javascript for that little extra sparkle.</description>
        </item><item>
        <title>Get img alt attribute automatically from src</title>
        <link>https://www.bradeneast.com/get-img-alt-attribute-automatically-from-src</link>
        <guid>https://www.bradeneast.com/get-img-alt-attribute-automatically-from-src</guid>
        <pubDate>Mon, 19 Aug 2019 05:00:00 GMT</pubDate>
        <category>javascript</category><category>html</category><category>accessibility</category><category>blog</category>
        <description>
I&#x2019;m sometimes lazy when it comes to accessibility on web projects. No matter how hard I try, I&#x2019;m usually adding aria-label and tabindex and role attributes later than I&#x2019;d like.</description>
        </item></channel></rss>